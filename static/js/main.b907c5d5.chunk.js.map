{"version":3,"sources":["logo.svg","App.js","SignIn.js","reportWebVitals.js","index.js"],"names":["App","Copyright","props","Typography","variant","color","align","Link","href","Date","getFullYear","theme","createTheme","SignIn","useState","qrstring","setQR","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","src","alt","onSubmit","event","preventDefault","data","FormData","currentTarget","urlstring","get","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoFocus","Button","type","mb","Grid","container","justifyContent","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,I,qBCYAA,I,iHCMf,SAASC,EAAUC,GACf,OACI,eAACC,EAAA,EAAD,yBAAYC,QAAQ,QAAQC,MAAM,iBAAiBC,MAAM,UAAaJ,GAAtE,cACK,kBACD,cAACK,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,6BAA3B,6BAEE,KACD,IAAIC,MAAOC,cACX,QAKb,IAAMC,EAAQC,cAEC,SAASC,IACpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAiBC,EAAjB,KAWA,OACI,cAACC,EAAA,EAAD,CAAeN,MAAOA,EAAtB,SACI,eAACO,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACI,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACIC,GAAI,CACAC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALpB,UAQI,qBAAKC,IAAI,WAAWC,IAAI,SACxB,cAAC1B,EAAA,EAAD,CAAYgB,UAAU,KAAKf,QAAQ,KAAnC,wBAGA,eAACkB,EAAA,EAAD,CAAKH,UAAU,OAAOW,SA1BjB,SAACC,GAClBA,EAAMC,iBACNhB,EAAM,IACN,IAAMiB,EAAO,IAAIC,SAASH,EAAMI,eAC1BC,EAAY,2CAA6CH,EAAKI,IAAI,MAAtD,UAA+EJ,EAAKI,IAAI,SAC1GrB,EAAMoB,IAqBoDE,YAAU,EAACf,GAAI,CAAEgB,GAAI,GAAnE,UACI,cAACC,EAAA,EAAD,CACIC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACNC,KAAK,QAELC,WAAS,IAEb,cAACP,EAAA,EAAD,CACIC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,KACHC,MAAM,gBACNC,KAAK,OAET,cAACE,EAAA,EAAD,CACIC,KAAK,SACLN,WAAS,EACTvC,QAAQ,YACRmB,GAAI,CAAEgB,GAAI,EAAGW,GAAI,GAJrB,oBASA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,UACI,cAACF,EAAA,EAAD,CACIxB,WAAW,SADf,SAGiB,IAAZZ,EAAiB,4CAAc,cAACR,EAAA,EAAD,CAAMC,KAAMO,EAAZ,yBAAd,4BAAqF,OAE3G,cAACoC,EAAA,EAAD,CACIxB,WAAW,SADf,SAGiB,IAAZZ,EAAiB,cAAC,IAAD,CAAQuC,MAAOvC,IAAe,gBAQhE,cAACd,EAAD,CAAWsB,GAAI,CAAEgB,GAAI,EAAGW,GAAI,UC1G5C,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAED,cAACrD,EAAD,MAECsD,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b907c5d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Button from '@mui/material/Button';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Button variant=\"contained\">Hello World</Button>\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React, { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport QRCode from \"react-qr-code\";\n\n\nfunction Copyright(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://rezvany.github.io/\">\n                Rezvany Profile\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n    const [qrstring, setQR] = useState(\"\");\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setQR(\"\");\n        const data = new FormData(event.currentTarget);\n        const urlstring = \"https://rezvany.github.io/qrscanner/?sn=\" + data.get('sn') + \"&\" + \"model=\" + data.get('model');\n        setQR(urlstring);\n        // eslint-disable-next-line no-console\n\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <img src=\"logo.png\" alt=\"logo\" />\n                    <Typography component=\"h1\" variant=\"h5\">\n                        QR Creator\n                               </Typography>\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"model\"\n                            label=\"Model\"\n                            name=\"model\"\n                            // autoComplete=\"model\"\n                            autoFocus\n                        />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"sn\"\n                            label=\"Serial Number\"\n                            name=\"sn\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n\n                        >\n                            Create\n            </Button>\n                        <Grid container justifyContent=\"center\">\n                            <Grid\n                                alignItems=\"center\"\n                            >\n                                {qrstring != \"\" ? <div>Click on <Link href={qrstring}> this Link </Link>  or Scan this QR Code</div> : null}\n                            </Grid>\n                            <Grid\n                                alignItems=\"center\"\n                            >\n                                {qrstring != \"\" ? <QRCode value={qrstring} /> : null}\n                            </Grid>\n                        </Grid>\n\n\n\n                    </Box>\n                </Box>\n                <Copyright sx={{ mt: 8, mb: 4 }} />\n            </Container>\n        </ThemeProvider >\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SignIn from './SignIn';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n <SignIn />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}